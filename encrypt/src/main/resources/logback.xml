<?xml version="1.0" encoding="UTF-8"?>
<!--
根节点<configuration>包含三个属性:
    scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
    scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，
    此属性生效。默认的时间间隔为1分钟。
    debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
    这里配置的10秒钟检测一次配置文件
-->
<configuration scan="true" scanPeriod="10 seconds">

    <!--
    子节点<contextName>:用来设置上下文名称：每个logger都关联到logger上下文，默认上下文名称为“default”。
    但可以使用设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改,可以通过%contextName来打印日志上下文名称
    -->
    <contextName>logback</contextName>

    <!--
    子节点<property>设置变量，类似于maven的property。用来定义变量值的标签，有两个属性，name和value；其中name的值是变量的名称，
    value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。
    -->
    <property name="log.path" value="F:/log"/>

    <!--控制台日志格式：彩色日志 %颜色()-->
    <!-- magenta:洋红 -->
    <!-- boldMagenta:粗红-->
    <!-- cyan:青色 -->
    <!-- white:白色 -->
    <!-- magenta:洋红 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%msg%n"/>

    <!--
           日志输出格式：
               %-5level 日志级别
               %d{yyyy-MM-dd HH:mm:ss} 日期
               %c 或者%logger类的完整名称
               %M method方法名
               %L 行号
               %thread 线程名
               %m或者%msg 日志信息
               %n 换行


           -->
    <!--编码-->
    <property name="ENCODING"
              value="UTF-8"/>


    <!--
    子节点<appender>:appender用来格式化日志输出节点，有俩个属性name和class，class用来指定哪种输出策略，
    常用就是控制台输出策略和文件输出策略。
    -->
    <!--输出到控制台-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!--日志级别-->
            <level>INFO</level>
        </filter>
        <encoder>
            <!--日志格式-->
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <!--日志字符集-->
            <charset>${ENCODING}</charset>
        </encoder>
    </appender>


    <!--开发环境-->
    <!--可以灵活设置此处，从而控制日志的输出-->
    <!--这里的级别只能比过滤器设置的打印级别相等或者更高，如果这里的级别比filter设置的级别低则以filter的设置为准-->
    <root level="DEBUG">
        <appender-ref ref="CONSOLE"/>
    </root>

</configuration>


        <!--
        <property>：定义变量
        <appender>：定义日志记录器
        <filter>：定义日志过滤器
        <rollingPolicy>：定义滚动策略
        <springProfile>：定义日志适配的环境
        <root>：根日志记录器
        -->